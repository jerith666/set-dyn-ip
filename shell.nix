{ nixpkgs ? import <nixpkgs> {}, compiler ? "default" }:

let

  inherit (nixpkgs) pkgs;

  f = { mkDerivation, amazonka, amazonka-core, amazonka-route53
      , base, lens, network, stdenv
      }:
      mkDerivation {
        pname = "set-dyn-ip";
        version = "0.1.0.0";
        src = ./.;
        isLibrary = false;
        isExecutable = true;
        executableHaskellDepends = [
          amazonka amazonka-core amazonka-route53 base lens network
        ];
        homepage = "http://matt.mchenryfamily.org";
        description = "reads an ip address as generated by client-ip-echo and sets it in Amazon AWS Route53";
        license = stdenv.lib.licenses.lgpl3;
      };

  haskellPackages = if compiler == "default"
                       then pkgs.haskellPackages
                       else pkgs.haskell.packages.${compiler};

  drv = haskellPackages.callPackage f {};

in

  if pkgs.lib.inNixShell then drv.env else drv
